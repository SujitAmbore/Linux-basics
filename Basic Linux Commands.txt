
Summary: 

- In this chapter, I am going to discuss some of the very basic linux commands which when used in combination can help to achieve desired results.

------------------------------------------------------------------------------------------------------------------------------------------

Command: pwd
Command: Present Working Directory is used to know which folder the user is currently in.

Example:
amboresujitgopal@machine ~ % pwd

Output: /Users/username/Documents

------------------------------------------------------------------------------------------------------------------------------------------
Command: cd 
Purpose: Change Directory is used to change current working directory

Example:
amboresujitgopal@machine ~ % cd Documents

Output: amboresujitgopal@machine Documents % 

------------------------------------------------------------------------------------------------------------------------------------------
Command: cd .. 
Purpose: This command enables user to go back into the previous directory.

Example:
amboresujitgopal@machine Documents % cd ..

Output: amboresujitgopal@machine ~ %


------------------------------------------------------------------------------------------------------------------------------------------
Command: ls 
Purpose: LIST is used to view content inside a folder.

Example:
username@machine Desktop % ls

Output: Below folder/files are present on Deskstop
Applications
File1.txt
Library
Public

------------------------------------------------------------------------------------------------------------------------------------------
Command: whoami
Purpose: This command displays the username of the current user when this its invoked.

Example:
username@machine Desktop % ls

Output: username

------------------------------------------------------------------------------------------------------------------------------------------
Command: clear
Purpose: To clear-out content inside the terminal/console

Example:
username@machine Desktop % clear

------------------------------------------------------------------------------------------------------------------------------------------
Creating, Reading and Removing Files on Linux
------------------------------------------------------------------------------------------------------------------------------------------
Command: touch 
Purpose: - It is used to create a file without any content. The file created using touch command is empty. This command can be used when 
the user doesnâ€™t have data to store at the time of file creation

Example:
username@machine Desktop % touch filename.txt 

Output: filename.txt will get created with empty content inside the file.
----------------------------------------------------------------------------------------------

Command: cat
Purpose: It is used to create the file with content also we can use cat command to view the contents of the file

Example: below example shows how to create a file and enter contents
username@machine Desktop % cat > newfile.txt
Hello World!

Output: newfile.txt will get created with "Hello World!" as content inside the file


Cat can also be used to copy contents of 1 file to another file

Command: $cat filename-whose-contents-is-to-be-copied.txt > destination-filename.txt
Output: destination-filename.txt will have the same content as filename-whose-contents-is-to-be-copied.txt

----------------------------------------------------------------------------------------------

Command: rm
Purpose: REMOVE command is used to remove a file inside folder/directory

Example: 
username@machine Desktop % rm file1.txt

Output: file1.txt will be removed from the Desktop
----------------------------------------------------------------------------------------------

Command: cp Src_file.txt Dest_file.txt
Purpose: Copy command is used to copy files or group of files or directory. It creates an exact image of a file on a disk with different file name. cp command require at least two filenames in its arguments.

Example:
username@machine Desktop % cp file1.txt file2.txt

Output: file2.txt will have the same content as file1.txt
